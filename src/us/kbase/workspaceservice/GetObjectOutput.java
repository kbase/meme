
package us.kbase.workspaceservice;

import java.util.HashMap;
import java.util.Map;
import javax.annotation.Generated;
import org.codehaus.jackson.annotate.JsonAnyGetter;
import org.codehaus.jackson.annotate.JsonAnySetter;
import org.codehaus.jackson.annotate.JsonProperty;
import org.codehaus.jackson.annotate.JsonPropertyOrder;
import org.codehaus.jackson.map.annotate.JsonSerialize;
import us.kbase.Tuple11;


/**
 * Output generated by the "get_object" function.
 * 
 *         string data - data for object retrieved in json format (an essential argument)
 *         object_metadata metadata - metadata for object retrieved (an essential argument)
 * 
 */
@JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({
    "data",
    "metadata"
})
public class GetObjectOutput {

    @JsonProperty("data")
    private Object data;
    @JsonProperty("metadata")
    private Tuple11 <String, String, String, Integer, String, String, String, String, String, String, Map<String, String>> metadata;
    private Map<java.lang.String, Object> additionalProperties = new HashMap<java.lang.String, Object>();

    @JsonProperty("data")
    public Object getData() {
        return data;
    }

    @JsonProperty("data")
    public void setData(Object data) {
        this.data = data;
    }

    public GetObjectOutput withData(Object data) {
        this.data = data;
        return this;
    }

    @JsonProperty("metadata")
    public Tuple11 <String, String, String, Integer, String, String, String, String, String, String, Map<String, String>> getMetadata() {
        return metadata;
    }

    @JsonProperty("metadata")
    public void setMetadata(Tuple11 <String, String, String, Integer, String, String, String, String, String, String, Map<String, String>> metadata) {
        this.metadata = metadata;
    }

    public GetObjectOutput withMetadata(Tuple11 <String, String, String, Integer, String, String, String, String, String, String, Map<String, String>> metadata) {
        this.metadata = metadata;
        return this;
    }

    @JsonAnyGetter
    public Map<java.lang.String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperties(java.lang.String name, Object value) {
        this.additionalProperties.put(name, value);
    }

}
